name: staging

on:
  push:
    branches:
      - main
      - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: üíæ Build and push image
        uses: docker/build-push-action@v5
        with:
          push: true
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  up:
    name: Update
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
      url: https://staging.ridebeep.app
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false
      - name: üì¶ install packages
        run: pnpm i --frozen-lockfile
      - name: Applying infrastructure üöÄ
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: ${{ secrets.ENVIRONMENT_NAME }}
          work-dir: deploy
        env:
          secrets: ${{ toJSON(secrets) }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
